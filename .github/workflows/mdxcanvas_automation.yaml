name: Update Canvas Material and Notify Discord

on:
  workflow_call:
    inputs:
      course_id:
        required: true
        type: string
      course_info_path:
        required: true
        type: string
      global_args_path:
        required: true
        type: string
      template_path:
        required: true
        type: string
      output_path:
        required: true
        type: string
      canvas_css_path:
        required: false
        type: string
    secrets:
      discord_role:
        required: true
      canvas_api_token:
        required: true
      discord_webhook_url:
        required: true


permissions:
  contents: write
  pull-requests: write

jobs:
  update_canvas_material:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout calling repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Checkout utils repo
        uses: actions/checkout@v4
        with:
          repository: BYU-CS-Course-Ops/utils
          path: utils

      - name: Install MDXCanvas
        run: pip install mdxcanvas

      - name: Ensure logs directory exists
        run: mkdir -p ${{ github.workspace }}/.github/logs

      - name: Run MDXCanvas
        id: run_mdxcanvas
        continue-on-error: true
        run: |
          export CANVAS_API_TOKEN=${{ secrets.canvas_api_token }}
      
          CMD="mdxcanvas --course-info ${{ github.workspace }}/${{ inputs.course_info_path }} \
                         --global-args ${{ github.workspace }}/${{ inputs.global_args_path }}"
      
          if [ -n "${{ inputs.canvas_css_path }}" ]; then
            CMD="$CMD --css ${{ github.workspace }}/${{ inputs.canvas_css_path }}"
          fi
      
          CMD="$CMD --output-file ${{ github.workspace }}/${{ inputs.output_path }} \
                     ${{ github.workspace }}/${{ inputs.template_path }}"
      
          echo "Running: \$CMD"
          eval $CMD

      - name: Get User Avatar URL
        run: |
          AVATAR_URL=$(curl -s https://api.github.com/users/${{ github.actor }} | jq -r '.avatar_url')
          echo "AVATAR_URL=$AVATAR_URL" >> $GITHUB_ENV

      - name: Install discord_webhook
        run: |
          pip install discord-webhook

      - name: Send notification to Discord
        run: |
          DISCORD_WEBHOOK_URL=${{ secrets.discord_webhook_url }} 
          
          python utils/course_updates/send_course_notification.py \
              --type "canvas" \
              --payload "${{ github.workspace }}/.github/logs/mdxcanvas_output.json" \
              --course-id "${{ inputs.course_id }}" \
              --author "${{ github.actor }}" \
              --author-icon "$AVATAR_URL" \
              --branch "${{ github.ref }}" \
              --cicd-id "${{ secrets.discord_role }}" \
              --action-url "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
